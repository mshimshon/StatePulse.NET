"use strict";(self.webpackChunkstatepulse_doc=self.webpackChunkstatepulse_doc||[]).push([[7698],{7272:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"4 Create Effects","title":"The Effects","description":"What are Effects","source":"@site/docs/4 Create Effects.md","sourceDirName":".","slug":"/gs-the-effect","permalink":"/gs-the-effect","draft":false,"unlisted":false,"editUrl":"https://github.com/mshimshon/StatePulse.NET/docs/4 Create Effects.md","tags":[{"inline":true,"label":"blazor","permalink":"/tags/blazor"},{"inline":true,"label":"effects","permalink":"/tags/effects"},{"inline":true,"label":"state-management","permalink":"/tags/state-management"},{"inline":true,"label":"async","permalink":"/tags/async"},{"inline":true,"label":"side-effects","permalink":"/tags/side-effects"},{"inline":true,"label":"statepulse","permalink":"/tags/statepulse"},{"inline":true,"label":"csharp","permalink":"/tags/csharp"},{"inline":true,"label":".net","permalink":"/tags/net"}],"version":"current","sidebarPosition":5,"frontMatter":{"slug":"gs-the-effect","title":"The Effects","tags":["blazor","effects","state-management","async","side-effects","statepulse","csharp",".net"],"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"The States","permalink":"/gs-state"},"next":{"title":"The Reducers","permalink":"/gs-the-reducer"}}');var r=t(4848),i=t(8453);const c={slug:"gs-the-effect",title:"The Effects",tags:["blazor","effects","state-management","async","side-effects","statepulse","csharp",".net"],sidebar_position:5},a=void 0,l={},o=[{value:"What are Effects",id:"what-are-effects",level:2},{value:"\ud83e\uddf1 Common Pattern: Request + Result",id:"-common-pattern-request--result",level:3},{value:"\ud83d\udcdb Naming Convention",id:"-naming-convention",level:3},{value:"Create The Effect",id:"create-the-effect",level:2},{value:"Effects Validators",id:"effects-validators",level:2},{value:"Real-World Scenario",id:"real-world-scenario",level:3},{value:"Benefits",id:"benefits",level:3}];function d(e){const n={br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"what-are-effects",children:"What are Effects"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Effects"})," are units of logic that run ",(0,r.jsx)(n.strong,{children:"in response to an action"}),", before any associated reducers are invoked."]}),"\n",(0,r.jsx)(n.p,{children:"They are commonly used for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Performing ",(0,r.jsx)(n.strong,{children:"side effects"})," (e.g. API calls, logging, validation)"]}),"\n",(0,r.jsxs)(n.li,{children:["Dispatching ",(0,r.jsx)(n.strong,{children:"follow-up actions"})," based on results"]}),"\n",(0,r.jsxs)(n.li,{children:["Handling ",(0,r.jsx)(n.strong,{children:"asynchronous workflows"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-common-pattern-request--result",children:"\ud83e\uddf1 Common Pattern: Request + Result"}),"\n",(0,r.jsx)(n.p,{children:"A typical pattern is to define:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SomeAction"})," \u2013 the original trigger"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SomeActionResult"})," \u2013 dispatched by the effect after the async work is done"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Reducers usually handle the ",(0,r.jsx)(n.code,{children:"Result"})," action to update the state."]}),"\n",(0,r.jsx)(n.h3,{id:"-naming-convention",children:"\ud83d\udcdb Naming Convention"}),"\n",(0,r.jsxs)(n.p,{children:["Effects are usually named using the action\u2019s name followed by the ",(0,r.jsx)(n.code,{children:"Effect"})," suffix."]}),"\n",(0,r.jsx)(n.h2,{id:"create-the-effect",children:"Create The Effect"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="IncrementCounterEffect.cs"',children:"internal class IncrementCounterEffect : IEffect<IncrementCounterAction>\r\n{\r\n    readonly IStateAccessor<CounterState> _counterState;\r\n    public IncrementCounterEffect(IStateAccessor<CounterState> counterState)\r\n    {\r\n        _counterState = counterState;\r\n    }\r\n    public async Task EffectAsync(IncrementCounterAction action, IDispatcher dispatcher)\r\n    {\r\n        // Recommendation: Always Await Dispatch to avoid safe execution issues, it won't block.\r\n        await dispatcher.Prepare<IncrementCounterResultAction>()\r\n            .With(p => p.Count, _counterState.State.Count + 1)\r\n            .DispatchAsync();\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"effects-validators",children:"Effects Validators"}),"\n",(0,r.jsxs)(n.p,{children:["Effect validators allow you to ",(0,r.jsx)(n.strong,{children:"run checks before an effect executes"}),", deciding whether the effect should run or be skipped."]}),"\n",(0,r.jsxs)(n.p,{children:["They receive both the ",(0,r.jsx)(n.strong,{children:"action"})," and the ",(0,r.jsx)(n.strong,{children:"effect instance"}),", since a single action can trigger ",(0,r.jsx)(n.strong,{children:"multiple effects"}),".",(0,r.jsx)(n.br,{}),"\n","By binding one or more validators to a specific effect, you can control its execution based on any logic you want."]}),"\n",(0,r.jsx)(n.h3,{id:"real-world-scenario",children:"Real-World Scenario"}),"\n",(0,r.jsxs)(n.p,{children:["Imagine you have an action, say ",(0,r.jsx)(n.code,{children:"RequestContentAction"}),", that is triggered by ",(0,r.jsx)(n.strong,{children:"all users"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For ",(0,r.jsx)(n.strong,{children:"non-subscribed users"}),", you want an effect that returns a limited preview or redirects to a subscription page."]}),"\n",(0,r.jsxs)(n.li,{children:["For ",(0,r.jsx)(n.strong,{children:"subscribed members"}),", you want a different effect that fetches full content."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Using effect validators, you can bind:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A validator on the ",(0,r.jsx)(n.strong,{children:"non-member effect"})," that checks if the user is ",(0,r.jsx)(n.em,{children:"not"})," subscribed and only runs the effect in that case."]}),"\n",(0,r.jsxs)(n.li,{children:["A validator on the ",(0,r.jsx)(n.strong,{children:"member effect"})," that checks if the user ",(0,r.jsx)(n.em,{children:"is"})," subscribed."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This way, ",(0,r.jsx)(n.strong,{children:"both effects respond to the same action but run conditionally based on user status."})]}),"\n",(0,r.jsx)(n.h3,{id:"benefits",children:"Benefits"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allows ",(0,r.jsx)(n.strong,{children:"clean separation"})," of logic for different user scenarios"]}),"\n",(0,r.jsxs)(n.li,{children:["Keeps action handling unified while supporting ",(0,r.jsx)(n.strong,{children:"multiple conditional outcomes"})]}),"\n",(0,r.jsx)(n.li,{children:"Avoids complex branching inside effects themselves"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Effect validators are a powerful way to ",(0,r.jsx)(n.strong,{children:"condition effect execution"})," by checking custom conditions involving the action and the current state,",(0,r.jsx)(n.br,{}),"\n","enabling flexible and maintainable multi-effect workflows based on business rules."]}),"\n",(0,r.jsx)(n.p,{children:"if any validator fails the effect is skipped."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="IncrementEffectValidator.cs"',children:"internal class IncrementEffectValidator : IEffectValidator<IncrementCounterAction, IncrementCounterEffect>\r\n{\r\n    public Task<bool> Validate(IncrementCounterAction action)\r\n    {\r\n        if (action.Delay > 1000) return Task.FromResult(false);\r\n        return Task.FromResult(true);\r\n    }\r\n}\r\n\n"})})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(6540);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);