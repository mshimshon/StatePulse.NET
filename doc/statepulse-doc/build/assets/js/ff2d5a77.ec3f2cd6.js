"use strict";(self.webpackChunkstatepulse_doc=self.webpackChunkstatepulse_doc||[]).push([[133],{8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(6540);const n={},a=r.createContext(n);function i(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},9679:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"tutorial-basics/Setup Blazor Project","title":"Setup Blazor Project","description":"\ud83d\udce6 Installation & Setup","source":"@site/docs/tutorial-basics/1. Setup Blazor Project.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/setup-blazor-project","permalink":"/tutorial-basics/setup-blazor-project","draft":false,"unlisted":false,"editUrl":"https://github.com/mshimshon/StatePulse.NET/docs/tutorial-basics/1. Setup Blazor Project.md","tags":[{"inline":true,"label":"hola","permalink":"/tags/hola"},{"inline":true,"label":"docusaurus","permalink":"/tags/docusaurus"}],"version":"current","sidebarPosition":1,"frontMatter":{"slug":"setup-blazor-project","title":"Setup Blazor Project","tags":["hola","docusaurus"],"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Tutorial - Basics","permalink":"/category/tutorial---basics"},"next":{"title":"Create Actions","permalink":"/tutorial-basics/gs-create-action"}}');var n=s(4848),a=s(8453);const i={slug:"setup-blazor-project",title:"Setup Blazor Project",tags:["hola","docusaurus"],sidebar_position:1},l=void 0,o={},c=[{value:"\ud83d\udce6 Installation &amp; Setup",id:"-installation--setup",level:2},{value:"Add Services",id:"add-services",level:2},{value:"Scan Assmblies",id:"scan-assmblies",level:3},{value:"Manual Registering",id:"manual-registering",level:3}];function u(e){const t={code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-installation--setup",children:"\ud83d\udce6 Installation & Setup"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"Install-Package StatePulse.Net\n\ndotnet add package StatePulse.Net\n\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Add to ",(0,n.jsx)(t.code,{children:"Program.cs"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",children:"builder.Services.AddStatePulseServices(o => {});\n"})}),"\n",(0,n.jsx)(t.p,{children:"Create StatePulse common folder structure."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"/Pulses/\n/Pulses/Counter <- Feature\n/Pulses/Counter/Actions\n/Pulses/Counter/Effects\n/Pulses/Counter/Effects/Validators\n/Pulses/Counter/Reducers\n/Pulses/Counter/Stores\n"})}),"\n",(0,n.jsx)(t.p,{children:"This structure is complete and very common pattern."}),"\n",(0,n.jsx)(t.h2,{id:"add-services",children:"Add Services"}),"\n",(0,n.jsx)(t.p,{children:"There are 2 ways to add services for StatePulse."}),"\n",(0,n.jsx)(t.h3,{id:"scan-assmblies",children:"Scan Assmblies"}),"\n",(0,n.jsx)(t.p,{children:"The easiest way is to scan whatever assembly you have pulses in."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",metastring:'title="program.cs"',children:"builder.Services.AddStatePulseServices(o =>\n{\n    o.ScanAssemblies = new Type[] { typeof(Program) };\n});\n"})}),"\n",(0,n.jsx)(t.h3,{id:"manual-registering",children:"Manual Registering"}),"\n",(0,n.jsxs)(t.p,{children:["StatePulse provide extension methods to add type of services and you ",(0,n.jsx)(t.strong,{children:"MUST"})," use them otherwise you face issues."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cs",metastring:'title="program.cs"',children:"builder.Services.AddStatePulseAction<IAction>();\nbuilder.Services.AddStatePulseEffect<IEffect>();\nbuilder.Services.AddStatePulseEffectValidator<IEffectValidator>();\nbuilder.Services.AddStatePulseReducer<IReducer>();\nbuilder.Services.AddStatePulseStateFeature<IStateFeature>();\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Note: you must manually register all services during unit test... the assembly scan doesn't get along well with unit testing."})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);