"use strict";(self.webpackChunkstatepulse_doc=self.webpackChunkstatepulse_doc||[]).push([[2787],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},9600:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Creating Actions","title":"The Actions","description":"Type of Actions","source":"@site/docs/2. Creating Actions.md","sourceDirName":".","slug":"/gs-the-action","permalink":"/gs-the-action","draft":false,"unlisted":false,"editUrl":"https://github.com/mshimshon/StatePulse.NET/docs/2. Creating Actions.md","tags":[{"inline":true,"label":"blazor","permalink":"/tags/blazor"},{"inline":true,"label":"actions","permalink":"/tags/actions"},{"inline":true,"label":"state-management","permalink":"/tags/state-management"},{"inline":true,"label":"isafeaction","permalink":"/tags/isafeaction"},{"inline":true,"label":"performance","permalink":"/tags/performance"},{"inline":true,"label":"statepulse","permalink":"/tags/statepulse"},{"inline":true,"label":"csharp","permalink":"/tags/csharp"},{"inline":true,"label":".net","permalink":"/tags/net"}],"version":"current","sidebarPosition":3,"frontMatter":{"slug":"gs-the-action","title":"The Actions","tags":["blazor","actions","state-management","isafeaction","performance","statepulse","csharp",".net"],"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Setup Blazor Project","permalink":"/setup-blazor-project"},"next":{"title":"The States","permalink":"/gs-state"}}');var s=t(4848),r=t(8453);const o={slug:"gs-the-action",title:"The Actions",tags:["blazor","actions","state-management","isafeaction","performance","statepulse","csharp",".net"],sidebar_position:3},c=void 0,a={},l=[{value:"Type of Actions",id:"type-of-actions",level:2},{value:"<code>IAction</code> \u2013 Regular and Lightweight Actions",id:"iaction--regular-and-lightweight-actions",level:3},{value:"\u2705 When to Use",id:"-when-to-use",level:4},{value:"<code>ISafeAction</code> \u2013 Safe Execution for Critical Actions",id:"isafeaction--safe-execution-for-critical-actions",level:3},{value:"\u26a0\ufe0f Performance Consideration",id:"\ufe0f-performance-consideration",level:4}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"type-of-actions",children:"Type of Actions"}),"\n",(0,s.jsxs)(n.p,{children:["There is 2 type of action in StatePulse ",(0,s.jsx)(n.code,{children:"IAction"})," and ",(0,s.jsx)(n.code,{children:"ISafeAction"}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"iaction--regular-and-lightweight-actions",children:[(0,s.jsx)(n.code,{children:"IAction"})," \u2013 Regular and Lightweight Actions"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"IAction"})," represents a ",(0,s.jsx)(n.strong,{children:"standard action"})," in the system. These are the ",(0,s.jsx)(n.strong,{children:"most common type of actions"})," and ",(0,s.jsx)(n.strong,{children:"do not include any built-in safety mechanisms"})," like debouncing, deduplication, or self-cancellation."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u26a0\ufe0f You should ",(0,s.jsx)(n.strong,{children:"not"})," wrap everything in ",(0,s.jsx)(n.code,{children:"ISafeAction"})," just for peace of mind.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"IAction"})," exists for a reason \u2014 ",(0,s.jsx)(n.strong,{children:"performance"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="IncrementCounterResultAction.cs"',children:"using StatePulse.Net;\r\npublic record IncrementCounterResultAction : IAction\r\n{\r\n    public int Count { get; init; } \r\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"-when-to-use",children:"\u2705 When to Use"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"IAction"})," when:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You want maximum performance"}),"\n",(0,s.jsx)(n.li,{children:"The action does not require race condition protection"}),"\n",(0,s.jsx)(n.li,{children:"It's okay if the action is triggered multiple times"}),"\n",(0,s.jsx)(n.li,{children:"You\u2019re working with local state or UI updates"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"You should note that IAction is record and is not recommended to add constructor arguments because of the way Dispatch works."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"isafeaction--safe-execution-for-critical-actions",children:[(0,s.jsx)(n.code,{children:"ISafeAction"})," \u2013 Safe Execution for Critical Actions"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ISafeAction"})," enforces ",(0,s.jsx)(n.strong,{children:"safe execution"})," of a given action to:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Prevent ",(0,s.jsx)(n.strong,{children:"duplicate triggers"})]}),"\n",(0,s.jsxs)(n.li,{children:["Avoid ",(0,s.jsx)(n.strong,{children:"race conditions"})]}),"\n",(0,s.jsxs)(n.li,{children:["Maintain ",(0,s.jsx)(n.strong,{children:"consistent state"})]}),"\n",(0,s.jsxs)(n.li,{children:["Support ",(0,s.jsx)(n.strong,{children:"self-cancellation"})," of outdated executions"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This is ideal for scenarios like ",(0,s.jsx)(n.strong,{children:"API calls"}),", where a user might interact rapidly with the UI (e.g. clicking buttons multiple times or navigating too quickly). Without safety, the ",(0,s.jsx)(n.strong,{children:"first action's result"})," might arrive ",(0,s.jsx)(n.em,{children:"after"})," the ",(0,s.jsx)(n.strong,{children:"second one"}),", and still update the state \u2014 causing inconsistency."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:'title="IncrementCounterAction.cs"',children:"using StatePulse.Net;\r\npublic record IncrementCounterAction : ISafeAction\r\n{\r\n    public int Delay { get; init; }\r\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"\ufe0f-performance-consideration",children:"\u26a0\ufe0f Performance Consideration"}),"\n",(0,s.jsx)(n.p,{children:"Not all actions need to be safe."}),"\n",(0,s.jsxs)(n.p,{children:["Using ",(0,s.jsx)(n.code,{children:"ISafeAction"})," introduces a ",(0,s.jsx)(n.strong,{children:"small performance overhead"}),", such as managing token lifecycles or task state tracking. This overhead is generally negligible, but unnecessary for:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Simple state updates"}),"\n",(0,s.jsx)(n.li,{children:"Fire-and-forget logic"}),"\n",(0,s.jsx)(n.li,{children:"Operations that are safe to duplicate"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use it only when necessary"}),", especially for actions where ",(0,s.jsx)(n.strong,{children:"result timing and state consistency matter"})," (like network requests)."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);